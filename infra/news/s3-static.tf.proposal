resource "aws_s3_bucket" "news" {
  bucket        = "${var.prefix}-terraform-infra-static-pages"
  force_destroy = true

  website {
    index_document = "index.html"
    error_document = "error.html"
  }

  server_side_encryption_configuration {
    rule {
      apply_server_side_encryption_by_default {
        sse_algorithm = "AES256"
      }
    }
  }
}

resource "aws_s3_bucket_public_access_block" "news" {
  bucket = aws_s3_bucket.news.id

  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acls      = true
  restrict_public_buckets = true
}

resource "aws_s3_bucket_ownership_controls" "news" {
  bucket = aws_s3_bucket.news.id
  rule {
    object_ownership = "BucketOwnerPreferred"
  }
}

# Remover ACL p√∫blica
# resource "aws_s3_bucket_acl" "news" {
#   depends_on = [
#     aws_s3_bucket_public_access_block.news,
#     aws_s3_bucket_ownership_controls.news,
#   ]
#
#   bucket = aws_s3_bucket.news.id
#   acl    = "private"
# }

resource "aws_s3_bucket_policy" "news" {
  depends_on = [
    aws_s3_bucket_public_access_block.news,
    aws_s3_bucket_ownership_controls.news,
  ]

  bucket = "${aws_s3_bucket.news.id}"

  policy = <<POLICY
{
  "Version": "2012-10-17",
  "Id": "newsBucketPolicy",
  "Statement": [
    {
      "Sid": "AllowSpecificUserAndRole",
      "Effect": "Allow",
      "Principal": {
        "AWS": [
          "arn:aws:iam::ACCOUNT_ID:user/SpecificUser",
          "arn:aws:iam::ACCOUNT_ID:role/SpecificRole"
        ]
      },
      "Action": "s3:*",
      "Resource": [
        "${aws_s3_bucket.news.arn}",
        "${aws_s3_bucket.news.arn}/*"
      ]
    },
    {
      "Sid": "AllowSpecificService",
      "Effect": "Allow",
      "Principal": {
        "Service": "specific-service.amazonaws.com"
      },
      "Action": "s3:*",
      "Resource": [
        "${aws_s3_bucket.news.arn}",
        "${aws_s3_bucket.news.arn}/*"
      ]
    }
  ]
}
POLICY
}
